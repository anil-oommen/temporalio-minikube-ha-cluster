plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    //id 'com.google.cloud.tools.jib' version '3.3.1'
     id 'com.google.cloud.tools.jib' version '3.4.3'
    id 'org.graalvm.buildtools.native' version '0.10.2'
}

java {
    sourceCompatibility = '21'
}

graalvmNative {
    binaries {
        main {
            buildArgs.add('--enable-preview')
        }
    }
}

java {
    toolchain { languageVersion = JavaLanguageVersion.of(21) }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

jib {
    /* Configured to use 'microk8s' registry to Push Images */
    from {
        image = 'openjdk:22-jdk-slim'
    }
    to {
        image ='localhost:32000/spring-boot-app'
        tags =['tio','v3']
    }
    container {
        jvmFlags = ['-Xms512m','-Xmx2g']
        mainClass = 'com.oom.temporal.LauncherMain'
        args = []
        ports = ['8080/tcp']
        environment = [
                "spring_profiles_active":"kbe"
        ]
    }
    allowInsecureRegistries = true
}


group 'com.oom.temporal'
version '0.0.5'

repositories {
    mavenCentral()
}
ext{
    temporalVersion = '1.25.2'
    lombokVersion = '1.18.30'
}


dependencies {
    implementation "io.temporal:temporal-spring-boot-starter:${temporalVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'


    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation "io.temporal:temporal-testing:${temporalVersion}"
}

test {
    useJUnitPlatform()
}